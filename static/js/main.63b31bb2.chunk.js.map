{"version":3,"sources":["CreditParameters/PropertyValue.js","CreditParameters/InitialFee.js","CreditParameters/CreditTerm.js","CreditParameters/InitialRate.js","CreditParameters/InitialFeePercent.js","CreditParameters/CustomAlert.js","CreditParameters/CreditParameters.js","ResultCard/ResultCard.js","CreditCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["PropertyValue","props","handleChange","bind","value","this","onPropertyValueChange","cost","InputGroup","Form","Group","controlId","Label","className","decimalSeparator","groupSeparator","allowNegativeValue","onChange","Component","InitialFee","newValue","onInitialFeeValueChange","initialFee","prefix","CreditTerm","e","onCreditTermChange","target","term","FormGroup","FormControl","type","min","InitialRate","onInitialRateChange","rate","Control","max","InitialFeePercent","selectedOption","selectedInitialFeeOption","ButtonGroup","toggle","name","map","radio","idx","ToggleButton","variant","checked","onInitialFeePercentChange","CustomAlert","alert","Alert","CreditParameters","initialFeePercent","Button","onClick","onClickSaveButton","onClickResetButton","ResultCard","creditBody","Math","round","I1200","monthlyFee","pow","monthlyFeeRounded","console","log","income","incomeRounded","overpayment","Number","overpaymentRounded","calculateCreditBody","calculateMonthlyFee","calculateIncome","calculateOverpayment","Card","bg","Body","Text","store","require","CreditCalculator","getInitialState","from","resetState","setState","state","handlePropertyChange","handleInitialFeeChange","handleInitialFeePercentChange","handleClickOnSave","newInitialFeeValueRounded","newInitialFeeValue","newPropertyValueRounded","newPropertyValue","event","currentTarget","get","setValueAndFee","getActualSetOfValueAndFee","set","calculateInitialFee","calculatePropertyValue","costAndFee","Row","Col","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63b31bb2.chunk.js","sourcesContent":["import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport React, {Component} from \"react\";\r\nimport CurrencyInput from \"react-currency-input-field\";\r\nimport '../App.css';\r\n\r\n\r\nclass PropertyValue extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(value) {\r\n        this.props.onPropertyValueChange(value);\r\n    }\r\n\r\n    render() {\r\n        const cost = this.props.cost;\r\n        return (\r\n            <InputGroup>\r\n                <Form.Group controlId=\"Cost\">\r\n                    <Form.Label>Стоимость недвижимости</Form.Label>\r\n                    <div className=\"input-group suffix\">\r\n                        <CurrencyInput\r\n                            className=\"form-control property-value\"\r\n                            decimalSeparator=\",\"\r\n                            groupSeparator=\" \"\r\n                            allowNegativeValue={ false }\r\n                            value={ cost }\r\n                            onChange={ this.handleChange } />\r\n                        <span className=\"input-group-addon \"> ₽ </span>\r\n                    </div>\r\n                </Form.Group>\r\n            </InputGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropertyValue;","import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport React, {Component} from \"react\";\r\nimport '../App.css';\r\nimport './CreditParameters.css'\r\nimport CurrencyInput from 'react-currency-input-field';\r\n\r\n\r\nclass InitialFee extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(newValue) {\r\n        this.props.onInitialFeeValueChange(newValue);\r\n    }\r\n\r\n    render() {\r\n\r\n        const initialFee = this.props.initialFee;\r\n\r\n        return (\r\n            <InputGroup>\r\n                <Form.Group controlId=\"InitialFee\">\r\n                    <Form.Label>Первоначальный взнос</Form.Label>\r\n                    <div className=\"input-group suffix\">\r\n                        <CurrencyInput\r\n                            className=\"form-control initial-fee\"\r\n                            allowNegativeValue={ false }\r\n                            prefix=\"\"\r\n                            decimalSeparator=\",\"\r\n                            groupSeparator=\" \"\r\n                            value={ initialFee }\r\n                            onChange={ (value) => this.handleChange(value) } />\r\n                        <span className=\"input-group-addon \"> ₽ </span>\r\n                    </div>\r\n                    </Form.Group>\r\n            </InputGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InitialFee;","import FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport React, {Component} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport '../App.css';\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\n\r\nclass CreditTerm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onCreditTermChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const term = this.props.term;\r\n        return(\r\n            <InputGroup>\r\n                <FormGroup>\r\n                    <Form.Label>Срок кредита</Form.Label>\r\n                    <div className=\"input-group suffix\">\r\n                        <FormControl type=\"number\"\r\n                                     className=\"credit-term\"\r\n                                     min=\"0\"\r\n                                     onChange={ this.handleChange }\r\n                                     value={ term }/>\r\n                        <span className=\"input-group-addon \"> лет </span>\r\n                    </div>\r\n                    </FormGroup>\r\n            </InputGroup>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreditTerm;","import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport React, {Component} from \"react\";\r\nimport './CreditParameters.css';\r\nimport '../App.css';\r\n\r\nclass InitialRate extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onInitialRateChange(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        const rate = this.props.rate;\r\n        return (\r\n            <InputGroup>\r\n                <Form.Group controlId=\"InitialRate\">\r\n                    <Form.Label>Процентная ставка</Form.Label>\r\n                    <div className=\"input-group suffix\">\r\n                        <Form.Control type=\"number\"\r\n                                      className=\"initial-rate\"\r\n                                      value={ rate }\r\n                                      onChange={ this.handleChange }\r\n                                      min=\"0\"\r\n                                      max=\"100\" />\r\n                        <span className=\"input-group-addon \"> % </span>\r\n                    </div>\r\n\r\n\r\n                </Form.Group>\r\n            </InputGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InitialRate;","import React, {Component} from \"react\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport '../App.css';\r\n\r\n\r\nclass InitialFeePercent extends Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const radios = [\r\n            { name: '10%', value: '10' },\r\n            { name: '15%', value: '15' },\r\n            { name: '20%', value: '20' },\r\n            { name: '25%', value: '25' },\r\n            { name: '30%', value: '30' },\r\n        ];\r\n        const selectedOption = this.props.selectedInitialFeeOption;\r\n        return (\r\n            <Form.Group controlId=\"InitialFeePercent\">\r\n                <ButtonGroup toggle className=\"btn-block\">\r\n                    {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            className=\"initial-fee-percent\"\r\n                            key={idx}\r\n                            type=\"radio\"\r\n                            variant=\"primary\"\r\n                            name=\"radio\"\r\n                            value={ radio.value }\r\n                            checked={ selectedOption === radio.value }\r\n                            onChange={ this.props.onInitialFeePercentChange }>\r\n                            { radio.name }\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Form.Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InitialFeePercent;","import Alert from \"react-bootstrap/Alert\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass CustomAlert extends Component {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        let alert;\r\n        if ( this.props.initialFee > this.props.cost ) {\r\n            alert = \"Первоначальный взнос не может быть больше стоимости недвижимости\";\r\n        }\r\n        return (alert) ? <Alert className=\"custom-alert\" variant=\"warning\">{alert}</Alert> : null;\r\n    }\r\n}\r\n\r\nexport default CustomAlert;","import React, {Component} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropertyValue from \"./PropertyValue\"\r\nimport InitialFee from \"./InitialFee\";\r\nimport CreditTerm from \"./CreditTerm\";\r\nimport InitialRate from \"./InitialRate\";\r\nimport InitialFeePercent from \"./InitialFeePercent\";\r\nimport CustomAlert from \"./CustomAlert\";\r\n\r\nclass CreditParameters extends Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const cost = this.props.cost;\r\n        const initialFee = this.props.initialFee;\r\n        const initialFeePercent = this.props.initialFeePercent;\r\n        const term = this.props.term;\r\n        const rate = this.props.rate;\r\n\r\n        return (\r\n            <Form className=\"col-lg-10\">\r\n\r\n                <PropertyValue\r\n                    cost={ cost }\r\n                    onPropertyValueChange={ this.props.onPropertyValueChange } />\r\n\r\n                <InitialFee\r\n                    initialFee={ initialFee }\r\n                    cost={ cost }\r\n                    onInitialFeeValueChange={ this.props.onInitialFeeValueChange } />\r\n\r\n                <InitialFeePercent\r\n                    selectedInitialFeeOption={ initialFeePercent }\r\n                    onInitialFeePercentChange={ this.props.onInitialFeePercentChange } />\r\n\r\n                <CreditTerm\r\n                    term={ term }\r\n                    onCreditTermChange={ this.props.onCreditTermChange } />\r\n\r\n                <InitialRate\r\n                    rate={ rate }\r\n                    onInitialRateChange={ this.props.onInitialRateChange } />\r\n\r\n                <div className=\"buttons\">\r\n                    <Button variant=\"success\"\r\n                            className=\"col-lg-6\"\r\n                            onClick={ this.props.onClickSaveButton }>Save</Button>\r\n                    <Button variant=\"light\"\r\n                            className=\"col-lg-6\"\r\n                            type=\"reset\"\r\n                            onClick={ this.props.onClickResetButton }>Clear</Button>\r\n                </div>\r\n\r\n                <CustomAlert initialFee={ initialFee }\r\n                    cost={ cost } />\r\n\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreditParameters;","import Card from \"react-bootstrap/Card\";\r\nimport React, {Component} from \"react\";\r\nimport '../App.css';\r\n\r\nclass ResultCard extends Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    calculateCreditBody(initialFee,cost) {\r\n        if (cost && initialFee) {\r\n            const creditBody = cost - initialFee;\r\n            return  Math.round((creditBody) * 1000) / 1000;\r\n        }\r\n        return '-';\r\n    }\r\n\r\n    calculateMonthlyFee(creditBody,rate,term) {\r\n        if (creditBody !== '-' && rate && term) {\r\n            let I1200 = rate / 1200;\r\n            let monthlyFee = creditBody * (I1200 + I1200 / (Math.pow(1 + I1200, (term * 12)) - 1));\r\n\r\n            let monthlyFeeRounded = Math.round(monthlyFee * 1000) / 1000;\r\n            console.log(`Monthly: ${monthlyFeeRounded}`)\r\n            return monthlyFeeRounded;\r\n        }\r\n        return '-';\r\n    }\r\n\r\n    calculateIncome(monthlyFee) {\r\n        if (monthlyFee !== '-') {\r\n            const income = 5 * monthlyFee / 3;\r\n            const incomeRounded = Math.round(income * 1000) / 1000;\r\n            console.log(`Income: ${incomeRounded}`)\r\n            return incomeRounded;\r\n        }\r\n        return '-';\r\n    }\r\n\r\n    calculateOverpayment(monthlyFee,initialFee,term,cost) {\r\n        if (monthlyFee !== '-' && initialFee && term && cost) {\r\n            const overpayment = monthlyFee * term * 12 - cost + Number(initialFee);\r\n            const overpaymentRounded = Math.round(overpayment * 1000) / 1000;\r\n            console.log(`Overpayment ${overpaymentRounded}`)\r\n            return overpaymentRounded;\r\n        }\r\n        return '-';\r\n    }\r\n\r\n    render() {\r\n        const initialFee = this.props.initialFee;\r\n        const cost = this.props.cost;\r\n        const rate = this.props.rate;\r\n        const term = this.props.term;\r\n\r\n        const creditBody = this.calculateCreditBody(initialFee,cost);\r\n        const monthlyFee = this.calculateMonthlyFee(creditBody,rate,term);\r\n        const income = this.calculateIncome(monthlyFee);\r\n        const overpayment =this.calculateOverpayment(monthlyFee,initialFee,term,cost);\r\n\r\n        return(\r\n            <Card\r\n                bg=\"light\"\r\n                className=\"mb-12 card-results\">\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <div className=\"results\">\r\n\r\n                            <div className=\"result\">\r\n                                <div className=\"monthly-fee-title title\">Ежемесячный платеж</div>\r\n                                <div className=\"monthly-fee-value value\">{ monthlyFee }</div>\r\n                            </div>\r\n\r\n                            <div className=\"result\">\r\n                                <div className=\"overpayment-title title\">Переплата</div>\r\n                                <div className=\"overpayment-value value\">{ overpayment }</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"results\">\r\n\r\n                            <div className=\"result\">\r\n                                <div className=\"income-title title\">Необходимый доход</div>\r\n                                <div className=\"income-value value\">{ income }</div>\r\n                            </div>\r\n\r\n                            <div className=\"result\">\r\n                                <div className=\"credit-title title\">Тело кредита</div>\r\n                                <div className=\"credit-value value\">{ creditBody }</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultCard;","import Col from \"react-bootstrap/Col\";\r\nimport React, {Component} from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport CreditParameters from \"./CreditParameters/CreditParameters\";\r\nimport ResultCard from \"./ResultCard/ResultCard\";\r\nconst store = require('store');\r\n\r\n\r\nclass CreditCalculator extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.getInitialState();\r\n        this.handlePropertyChange = this.handlePropertyChange.bind(this);\r\n        this.handleInitialFeeChange = this.handleInitialFeeChange.bind(this);\r\n        this.handleInitialFeePercentChange = this.handleInitialFeePercentChange.bind(this);\r\n        this.handleClickOnSave = this.handleClickOnSave.bind(this);\r\n    }\r\n\r\n    getInitialState = () => ({\r\n        cost: '',\r\n        initialFee: '',\r\n        from: '',\r\n        initialFeePercent: '',\r\n        term: '',\r\n        rate: ''\r\n    })\r\n\r\n    resetState = () => {\r\n        this.setState(this.getInitialState());\r\n    }\r\n\r\n    handlePropertyChange(cost) {\r\n        this.setState({ cost: Number(cost),\r\n            from: 'v' });\r\n    }\r\n\r\n    calculateInitialFee() {\r\n        const cost = this.state.cost;\r\n        const initialFeePercent = this.state.initialFeePercent;\r\n        let newInitialFeeValueRounded;\r\n\r\n        if (cost) {\r\n            let newInitialFeeValue = cost * initialFeePercent / 100;\r\n            newInitialFeeValueRounded = Math.round(newInitialFeeValue * 1000) / 1000;\r\n        } else {\r\n            newInitialFeeValueRounded = 0;\r\n        }\r\n        return newInitialFeeValueRounded;\r\n    }\r\n\r\n    handleInitialFeeChange(initialFee) {\r\n        this.setState({ initialFee: Number(initialFee),\r\n            from: 'f' });\r\n    }\r\n\r\n    calculatePropertyValue() {\r\n        const initialFee = this.state.initialFee;\r\n        const initialFeePercent = this.state.initialFeePercent;\r\n        let newPropertyValueRounded;\r\n        if (initialFee) {\r\n            let newPropertyValue = initialFee * 100 / initialFeePercent;\r\n            newPropertyValueRounded = Math.round(newPropertyValue * 1000) / 1000;\r\n        } else {\r\n            newPropertyValueRounded = 0;\r\n        }\r\n        return newPropertyValueRounded;\r\n    }\r\n\r\n    handleInitialFeePercentChange(event) {\r\n        const selectedOption = event.currentTarget.value\r\n        this.setState({ initialFeePercent: selectedOption });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cost = store.get('cost') ;\r\n        const initialFee = store.get('initialFee');\r\n        const initialFeePercent = store.get('initialFeePercent');\r\n        const term = store.get('term');\r\n        const rate = store.get('rate');\r\n        const from = store.get('from');\r\n\r\n        this.setState({ cost, initialFee, term, initialFeePercent, rate, from });\r\n    }\r\n\r\n    handleClickOnSave() {\r\n        console.log('Writing');\r\n\r\n        const setValueAndFee = this.getActualSetOfValueAndFee();\r\n\r\n        store.set('cost', setValueAndFee.cost);\r\n        store.set('initialFee', setValueAndFee.initialFee);\r\n        store.set('initialFeePercent', this.state.initialFeePercent);\r\n        store.set('term', this.state.term);\r\n        store.set('rate', this.state.rate);\r\n        store.set('from', this.state.from);\r\n    }\r\n\r\n    getActualSetOfValueAndFee() {\r\n        const from = this.state.from;\r\n        const initialFeePercent = this.state.initialFeePercent;\r\n        let cost, initialFee;\r\n\r\n        if ( initialFeePercent ) {\r\n            initialFee = from === 'v' ? this.calculateInitialFee() : this.state.initialFee;\r\n            cost = from === 'f' ? this.calculatePropertyValue() : this.state.cost;\r\n        } else {\r\n            initialFee = this.state.initialFee;\r\n            cost = this.state.cost;\r\n        }\r\n\r\n        return ({cost: cost, initialFee: initialFee});\r\n    }\r\n\r\n\r\n    render() {\r\n        const initialFeePercent = this.state.initialFeePercent;\r\n        const term = this.state.term;\r\n        const rate = this.state.rate;\r\n        const costAndFee = this.getActualSetOfValueAndFee();\r\n        const initialFee = costAndFee.initialFee;\r\n        const cost = costAndFee.cost;\r\n\r\n        return(\r\n            <Row>\r\n                <Col>\r\n                    <CreditParameters\r\n                        initialFee={ initialFee }\r\n                        initialFeePercent={ initialFeePercent }\r\n                        cost={ cost }\r\n                        onPropertyValueChange={ this.handlePropertyChange }\r\n                        onInitialFeeValueChange={ this.handleInitialFeeChange }\r\n                        onInitialFeePercentChange={ this.handleInitialFeePercentChange }\r\n                        onInitialRateChange={ (value) =>  this.setState({rate: Number(value) }) }\r\n                        onCreditTermChange={ (value) => this.setState({term: Number(value) }) }\r\n                        term={ term }\r\n                        rate={ rate }\r\n                        onClickSaveButton={ this.handleClickOnSave }\r\n                        onClickResetButton={ this.resetState }/>\r\n                </Col>\r\n                <Col>\r\n                    <ResultCard\r\n                        initialFee={ initialFee }\r\n                        cost={ cost }\r\n                        rate={ rate }\r\n                        term={ term } />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CreditCalculator;","import React from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CreditCalculator from './CreditCalculator'\nimport Container from \"react-bootstrap/Container\";\n\nfunction App() {\n  return (\n      <Container className=\"component\">\n            <CreditCalculator />\n      </Container>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}